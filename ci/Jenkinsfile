pipeline {
    environment {
        registry = 'marcinwatroba/tweet-id-scrapper'
        registryCredential = 'marcinwatroba_dockerhub'
    }
    agent {
        docker {
            image 'openjdk:11-jdk'
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout sources') {
            steps {
                git branch: 'master', credentialsId: 'markowanga_github',
                        url: 'https://github.com/markowanga/tweet-id-scrapper.git'
                sh 'rm ci/Jenkinsfile'
            }
        }
        stage('Test') {
            steps {
                sh './gradlew test'
            }
        }
        stage('Build') {
            steps {
                sh './gradlew bootJar'
            }
        }
        stage('Prepare docker resources') {
            steps {
                sh "apt-get update"
                sh "apt-get install -y curl"
                sh 'curl -fsSL https://get.docker.com -o get-docker.sh'
                sh 'sh get-docker.sh'
                sh "mv build/libs/*.jar src/main/docker/"
            }
        }
        stage('Build & push docker') {
            steps {
                script {
                    dockerImageWithNumber = docker.build(registry + ":$BUILD_NUMBER", './src/main/docker/')
                    dockerImageLatest = docker.build(registry + ":latest", './src/main/docker/')
                    docker.withRegistry('', registryCredential) {
                        dockerImageWithNumber.push()
                        dockerImageLatest.push()
                    }
                }
            }
        }
    }
    post {
        always {
            sh 'rm -rf *'
        }
//        success {}
//        unstable {}
//        failure {}
//        aborted {}
    }
}